{"version":3,"sources":["components/Home.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/Nav.tsx","App.tsx","index.tsx"],"names":["Home","getPeople","a","fetch","then","response","json","people","PersonRow","slug","name","sex","born","died","mother","father","personSlug","useParams","history","useHistory","className","classnames","key","onClick","personUrl","push","pathname","PeopleTable","map","person","motherName","fatherName","PeoplePage","match","useState","setPeople","params","useEffect","length","NotFoundPage","Nav","to","exact","path","type","App","component","from","ReactDOM","render","document","getElementById"],"mappings":"kPAOeA,G,MAJQ,kBACrB,sC,iCCIaC,EAPA,uCAAG,4BAAAC,EAAA,4DACA,wDADA,SAEKC,MAAM,GAAD,OADV,wDACU,iBAA2BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF/D,cAEVC,EAFU,yBAITA,GAJS,2CAAH,qD,iBCeFC,EAAsC,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,IAAIC,EAA8B,EAA9BA,KAAKC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,OAC7EC,EAAeC,cAAfD,WACFE,EAAUC,cAShB,OACA,wBAAIC,UAAWC,IAAW,SAAU,CAClC,cAAiBZ,IAASO,IAExBM,IAAKb,EACLc,QAAS,kBAXeC,EAWUf,OAVpCS,EAAQO,KAAK,CACXC,SAAS,WAAD,OAAaF,KAFE,IAACA,IAetB,wBAAIJ,UAAiB,MAANT,EACX,MACA,SAAUD,GAEd,wBAAIU,UAAiB,MAANT,EACX,MACA,SACK,MAANA,EACG,SACA,WAEN,4BAAKC,GACL,4BAAKC,GACL,wBAAIO,UAAU,SAASN,GACvB,wBAAIM,UAAU,OAAOL,KC3CdY,EAA+B,SAAC,GAAD,IAAEpB,EAAF,EAAEA,OAAF,OAE5C,2BAAOa,UAAU,eACf,2BAAOA,UAAU,sBACjB,4BACE,sCACA,qCACA,sCACA,qCACA,wCACA,0CAGF,+BACCb,EAAOqB,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CACpBnB,KAAMmB,EAAOnB,KACbC,IAAKkB,EAAOlB,IACZC,KAAMiB,EAAOjB,KACbC,KAAMgB,EAAOhB,KACbC,OAAQe,EAAOC,WACff,OAAQc,EAAOE,WACftB,KAAMoB,EAAOpB,aCDFuB,EAlBqB,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACnBC,mBAAmB,IADA,mBACxC3B,EADwC,KAChC4B,EADgC,KAEzCnB,EAAaiB,EAAMG,OAAOpB,WAKlC,OAHEqB,qBAAU,WACNpC,IAAYG,KAAK+B,KACnB,IACK,oCACL,2CACe,IAAhB5B,EAAO+B,OACJ,cACA,kBAAC,EAAD,CAAa/B,OAAQA,EAAQ0B,MAAOjB,MCP3BuB,EAViB,kBAC9B,yBAAKnB,UAAU,gBACb,yBAAKA,UAAU,SAAf,OAGA,wBAAIA,UAAU,YAAd,qBC4BWoB,EAhCO,kBACpB,6BACE,wBAAIpB,UAAU,WACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CACEqB,GAAG,IACHC,OAAK,EACLtB,UAAU,iBAHZ,SAOF,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CACEqB,GAAG,UACHrB,UAAU,iBAFZ,gBAOF,wBAAIA,UAAU,wBACZ,kBAAC,IAAD,CAAOuB,KAAK,WACZ,2BACEC,KAAK,OACLxB,UAAU,sBCSLyB,EAzBO,WAEpB,OACE,oCACE,gCACE,kBAAC,EAAD,OAGF,8BACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOF,KAAK,IAAID,OAAK,EAACI,UAAW9C,IACjC,kBAAC,IAAD,CAAU+C,KAAK,QAAQN,GAAG,MAC1B,kBAAC,IAAD,CACEE,KAAK,uBAELG,UAAWd,IAEb,kBAAC,IAAD,CAAOc,UAAWP,QCvB1BS,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,W","file":"static/js/main.24da848a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Home: React.FC = () => (\r\n  <h1>HOME</h1>\r\n);\r\n\r\nexport default Home;\r\n","\r\nconst getPeople = async ():Promise<Person[]> => {\r\n  const API_URL = 'https://mate-academy.github.io/react_people-table/api';\r\n  const people = await fetch(`${API_URL}/people.json`).then(response => response.json());\r\n\r\n  return people;\r\n};\r\n\r\nexport default getPeople;\r\n","import React from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classnames from 'classnames';\n\n\ntype PersonRowProps = {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  mother: string;\n  father: string;\n  slug: string;\n\n};\n\nexport const PersonRow: React.FC<PersonRowProps> = ({slug,name, sex,born,died,mother,father,}) => {\nconst { personSlug } = useParams();\nconst history = useHistory();\n\n\nconst handleSelectPerson = (personUrl: string) => {\n  history.push({\n    pathname: `/people/${personUrl}`,\n  });\n};\n\nreturn(\n<tr className={classnames('Person', {\n  'Person_active': slug === personSlug,\n})}\n    key={slug}\n    onClick={() => handleSelectPerson(slug)}\n>\n\n\n      <td className={sex==='m'\n        ? 'man'\n        : 'woman'}>{name}</td>\n\n      <td className={sex==='m'\n        ? 'man'\n        : 'woman'}>\n        {sex==='m'\n          ? '  male'\n          : ' female'}\n      </td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td className='woman'>{mother}</td>\n      <td className='man'>{father}</td>\n</tr>\n\n);\n\n\n}\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\n\ninterface Props {\n  people: Person[];\n  match:string;\n}\nexport const PeopleTable: React.FC<Props> = ({people}) => (\n\n<table className=\"PeopleTable\">\n  <thead className=\"PeopleTable-header\">\n  <tr>\n    <td> NAME </td>\n    <td> SEX </td>\n    <td> BORN </td>\n    <td> DIE </td>\n    <td> MOTHER </td>\n    <td> FATHER </td>\n  </tr>\n  </thead>\n  <tbody>\n  {people.map(person => <PersonRow\n    name={person.name}\n    sex={person.sex}\n    born={person.born}\n    died={person.died}\n    mother={person.motherName}\n    father={person.fatherName}\n    slug={person.slug}\n  />)}\n  </tbody>\n</table>\n\n);\n\n\n","import React, {useEffect, useState} from \"react\";\nimport getPeople from \"../helpers/api\";\nimport {PeopleTable} from './PeopleTable';\nimport {RouteComponentProps} from 'react-router-dom';\n\ntype Props = RouteComponentProps<{\n  personSlug: string;\n}>\n\nconst PeoplePage: React.FC<Props> = ({match}) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const personSlug = match.params.personSlug;\n\n  useEffect(() => {\n      getPeople().then(setPeople)},\n    []);\nreturn(  <>\n    <h1>People Page</h1>\n  {people.length===0\n    ? 'Loading....'\n    : <PeopleTable people={people} match={personSlug} />\n  }\n    </>\n  );\n\n}\n\nexport default PeoplePage;\n","import React from 'react';\n\n\nconst NotFoundPage : React.FC = () => (\n  <div className='NotFoundPage'>\n    <div className='error'>\n    404\n  </div>\n    <h1 className='notFound'>Page not found!</h1>\n  </div>\n\n);\n\nexport default NotFoundPage ;\n","import React from 'react';\nimport {NavLink, Route} from \"react-router-dom\";\n\n\nconst Nav: React.FC = () => (\n  <nav>\n    <ul className=\"navlist\">\n      <li className=\"navlist__item\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"navlist__link\">\n          Home\n        </NavLink>\n      </li>\n      <li className=\"navlist__item\">\n        <NavLink\n          to=\"/people\"\n          className=\"navlist__link\">\n          People Page\n        </NavLink>\n      </li>\n\n      <li className=\"navlist__item search\">\n        <Route path='/people'>\n        <input\n          type=\"text\"\n          className='search_input'\n        />\n      </Route>\n      </li>\n    </ul>\n\n  </nav>\n);\n\nexport default Nav;\n","import React from 'react';\nimport {\n  Route, Switch, Redirect\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport PeoplePage from './components/PeoplePage'\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport Nav from \"./components/Nav\";\n\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n      <header>\n        <Nav />\n\n      </header>\n      <main>\n        <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Redirect from='/home' to='/' />\n        <Route\n          path=\"/people/:personSlug?\"\n\n          component={PeoplePage}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n      </main>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n ,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}