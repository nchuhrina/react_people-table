{"version":3,"sources":["components/Home.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/Nav.tsx","App.tsx","index.tsx"],"names":["Home","getPeople","a","fetch","then","response","json","people","PersonRow","person","personSlug","useParams","history","useHistory","location","useLocation","name","sex","born","died","motherName","fatherName","slug","className","classnames","key","onClick","personUrl","push","search","pathname","columnsName","PeopleTable","React","memo","searchParams","URLSearchParams","sortBy","get","isSortedAsc","map","columns","toLowerCase","set","toString","src","width","height","alt","sortedAsc","sort","b","localeCompare","reverse","PeoplePage","useState","setPeople","query","useEffect","toLowerQuery","visiblePeople","useMemo","filter","includes","length","NotFoundPage","Nav","input","setInput","updateQuery","useCallback","debounce","delete","to","exact","path","type","value","onChange","event","target","App","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9619d97.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Home: React.FC = () => (\r\n  <h1>HOME</h1>\r\n);\r\n\r\nexport default Home;\r\n","const getPeople = async (): Promise<Person[]> => {\n  const API_URL = 'https://mate-academy.github.io/react_people-table/api';\n  const people = await fetch(`${API_URL}/people.json`).then(response => response.json());\n\n  return people;\n};\n\nexport default getPeople;\n","import React from 'react';\nimport {useParams, useHistory, useLocation} from \"react-router-dom\";\nimport classnames from 'classnames';\n\n\ntype PersonRowProps = {\n  person:Person;\n\n};\n\nexport const PersonRow: React.FC<PersonRowProps> = ({person}) => {\n  const {personSlug} = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const{ name, sex, born, died, motherName, fatherName, slug} = person;\n\n\n  const handleSelectPerson = (personUrl: string) => {\n    history.push({\n      search:location.search,\n      pathname: `/people/${personUrl}`,\n    });\n  };\n\n  return (\n    <tr className={classnames('Person', {\n      'Person_active': slug === personSlug,\n    })}\n        key={slug}\n        onClick={() => handleSelectPerson(slug)}\n    >\n\n\n      <td className={sex === 'm'\n        ? 'man'\n        : 'woman'}>{name}</td>\n\n      <td className={sex === 'm'\n        ? 'man'\n        : 'woman'}>\n        {sex === 'm'\n          ? '  male'\n          : ' female'}\n      </td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td className='woman'>{motherName}</td>\n      <td className='man'>{fatherName}</td>\n    </tr>\n\n  );\n\n\n}\n","import React from 'react';\nimport {PersonRow} from './PersonRow';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\ninterface Props {\n  people: Person[];\n}\n\nconst columnsName = ['NAME', 'SEX', 'BORN', 'DIED', 'MOTHER', 'FATHER'];\n\nexport const PeopleTable: React.FC<Props> = React.memo(({people}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const isSortedAsc = searchParams.get('sortOrder') !== 'desc';\n\n\n  const getPeople = (people: Person[], sortBy: string, sortedAsc: boolean) => {\n    switch (sortBy) {\n      case 'name':\n      case 'sex':\n        return (sortedAsc)\n          ? [...people].sort((a, b) => a[sortBy].localeCompare(b[sortBy]))\n          : [...people].sort((a, b) => a[sortBy].localeCompare(b[sortBy])).reverse();\n\n      case 'died':\n      case 'born':\n        return (sortedAsc)\n          ? [...people].sort((a, b) => a[sortBy] - b[sortBy])\n          : [...people].sort((a, b) => a[sortBy] - b[sortBy]).reverse();\n\n      default:\n        return people;\n    }\n\n  };\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead className=\"PeopleTable-header\">\n      <tr>\n        {columnsName.map(columns => {\n          if (columns.toLowerCase() === 'name'\n            || columns.toLowerCase() === 'born'\n            || columns.toLowerCase() === 'died'\n            || columns.toLowerCase() === 'sex') {\n            return (\n              <th\n                key={columns}\n                onClick={() => {\n                  \n                  searchParams.set('sortBy', columns.toLowerCase());\n                  history.push({search: searchParams.toString()});\n\n                }\n                }>\n\n                {columns}\n                {'    '}\n\n\n                {sortBy === columns.toLowerCase() && (\n                  isSortedAsc\n                    ? (\n                      <img\n                        onClick={() => {\n                          if (searchParams.get('sortBy')!== columns.toLowerCase()) {\n                            searchParams.set('sortOrder', 'asc');\n                            searchParams.set('sortBy', columns.toLowerCase());\n                            history.push({search: searchParams.toString()});\n                          }\n                          searchParams.set('sortOrder', isSortedAsc ? 'desc' : 'asc');\n                          searchParams.set('sortBy', columns.toLowerCase());\n                          history.push({search: searchParams.toString()});\n\n                        }\n                        }\n                        src='https://image.flaticon.com/icons/svg/25/25330.svg'\n                        width=\"16\"\n                        height=\"16\"\n                        alt='sort'\n                        className=\"sort-img\"\n                      />\n                    )\n                    : (\n                      <img\n                        onClick={() => {\n                          if (searchParams.get('sortBy')!== columns.toLowerCase()) {\n                            searchParams.set('sortOrder', 'asc');\n                            searchParams.set('sortBy', columns.toLowerCase());\n                            history.push({search: searchParams.toString()});\n                          }\n                          searchParams.set('sortOrder', isSortedAsc ? 'desc' : 'asc');\n                          searchParams.set('sortBy', columns.toLowerCase());\n                          history.push({search: searchParams.toString()});\n\n                        }\n                        }\n                        src='https://image.flaticon.com/icons/svg/25/25224.svg'\n                        width=\"16\"\n                        height=\"16\"\n                        alt='sort'\n                        className=\"sort-img\"\n                      />\n                    )\n                )}\n\n\n              </th>)\n\n          } else {\n            return (\n              <th\n                key={columns}\n              >\n                {columns}\n\n              </th>)\n          }\n        })}\n      </tr>\n      </thead>\n      <tbody>\n      {getPeople(people, sortBy, isSortedAsc).map(person => <PersonRow\n        person={person}\n      />)}\n      </tbody>\n    </table>\n\n\n  )\n})\n\n\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport getPeople from \"../helpers/api\";\nimport {PeopleTable} from './PeopleTable';\nimport {useLocation} from \"react-router-dom\";\n\n\nconst PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n\n\n  useEffect(() => {\n      getPeople().then(setPeople)\n    },\n    []);\n  const toLowerQuery = query.toLowerCase();\n\n  const visiblePeople = useMemo(() =>\n    people.filter(person =>\n      person.name.toLowerCase().includes(toLowerQuery)\n      || (person.fatherName !== null\n      ? person.fatherName.toLowerCase().includes(toLowerQuery)\n      : '')\n      || (person.motherName !== null\n      ? person.motherName.toLowerCase().includes(toLowerQuery)\n      : '')\n    ), [toLowerQuery, people]);\n\n\n  return <>\n    <h1>People Page</h1>\n    <div className=\"search \">\n\n    </div>\n    {people.length === 0\n      ? 'Loading....'\n      : <PeopleTable people={visiblePeople}/>\n    }\n  </>;\n\n}\n\nexport default PeoplePage;\n","import React from 'react';\n\n\nconst NotFoundPage : React.FC = () => (\n  <div className='NotFoundPage'>\n    <div className='error'>\n    404\n  </div>\n    <h1 className='notFound'>Page not found!</h1>\n  </div>\n\n);\n\nexport default NotFoundPage ;\n","import React, {useState, useCallback} from 'react';\nimport {NavLink, Route, useLocation, useHistory} from \"react-router-dom\";\nimport debounce from 'lodash/debounce';\n\nconst Nav: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [input, setInput] = useState(query);\n\n  const updateQuery = useCallback(debounce(\n    (query: string) => {\n      if(query){searchParams.set('query', query);}\n      else{searchParams.delete('query');}\n\n      history.push({\n        search: searchParams.toString()\n      })\n    }, 500),[])\n\n  const handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value)\n      updateQuery(event.target.value)\n  }\n  return (\n    <nav>\n      <ul className=\"navlist\">\n        <li className=\"navlist__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"navlist__link\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navlist__item\">\n          <NavLink\n            to={{\n              pathname: '/people',\n            }}\n            className=\"navlist__link\">\n            People Page\n          </NavLink>\n        </li>\n\n        <li className=\"navlist__item search\">\n          <Route path='/people'>\n            <input\n              type=\"text\"\n              className='search_input'\n              value={input}\n              onChange={handleQueryUpdate}\n            />\n          </Route>\n        </li>\n      </ul>\n\n    </nav>)\n};\n\nexport default Nav;\n","import React from 'react';\nimport {\n  Route, Switch, Redirect\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport PeoplePage from './components/PeoplePage'\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport Nav from \"./components/Nav\";\n\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n      <header>\n        <Nav/>\n\n      </header>\n      <main>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Redirect from='/home' to='/'/>\n          <Route\n            path=\"/people/:personSlug?\"\n            exact\n            component={PeoplePage}\n          />\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </main>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter\n   // basename={'/react_people-table'}\n  >\n    <App />\n  </HashRouter>\n ,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}