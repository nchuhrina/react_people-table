{"version":3,"sources":["components/Home.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/Nav.tsx","App.tsx","index.tsx"],"names":["Home","getPeople","a","fetch","then","response","json","people","PersonRow","person","personSlug","useParams","history","useHistory","name","sex","born","died","motherName","fatherName","slug","className","classnames","key","onClick","personUrl","push","pathname","columnsName","PeopleTable","location","useLocation","searchParams","URLSearchParams","search","sortBy","get","map","columns","toLowerCase","set","toString","sort","b","localeCompare","PeoplePage","useState","setPeople","query","useEffect","visiblePeople","filter","includes","length","NotFoundPage","Nav","to","exact","path","type","value","onChange","event","target","App","component","from","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.79d52293.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Home: React.FC = () => (\r\n  <h1>HOME</h1>\r\n);\r\n\r\nexport default Home;\r\n","const getPeople = async (): Promise<Person[]> => {\n  const API_URL = 'https://mate-academy.github.io/react_people-table/api';\n  const people = await fetch(`${API_URL}/people.json`).then(response => response.json());\n\n  return people;\n};\n\nexport default getPeople;\n","import React from 'react';\nimport {useParams, useHistory} from \"react-router-dom\";\nimport classnames from 'classnames';\n\n\ntype PersonRowProps = {\n  person:Person;\n\n};\n\nexport const PersonRow: React.FC<PersonRowProps> = ({person}) => {\n  const {personSlug} = useParams();\n  const history = useHistory();\n  const{ name, sex, born, died, motherName, fatherName, slug} = person;\n\n\n  const handleSelectPerson = (personUrl: string) => {\n    history.push({\n      pathname: `/people/${personUrl}`,\n    });\n  };\n\n  return (\n    <tr className={classnames('Person', {\n      'Person_active': slug === personSlug,\n    })}\n        key={slug}\n        onClick={() => handleSelectPerson(slug)}\n    >\n\n\n      <td className={sex === 'm'\n        ? 'man'\n        : 'woman'}>{name}</td>\n\n      <td className={sex === 'm'\n        ? 'man'\n        : 'woman'}>\n        {sex === 'm'\n          ? '  male'\n          : ' female'}\n      </td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td className='woman'>{motherName}</td>\n      <td className='man'>{fatherName}</td>\n    </tr>\n\n  );\n\n\n}\n","import React from 'react';\nimport {PersonRow} from './PersonRow';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\ninterface Props {\n  people: Person[];\n}\n\nconst columnsName = ['NAME', 'SEX', 'BORN', 'DIED', 'MOTHER', 'FATHER'];\n\nexport const PeopleTable: React.FC<Props> = ({people}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n\n\n  const getPeople = (people: Person[], sortBy: string) => {\n    switch (sortBy) {\n      case 'name':\n        return [...people].sort((a, b) => a.name.localeCompare(b.name));\n\n      case 'died':\n        return [...people].sort((a, b) => a.died - b.died);\n\n      case 'born':\n        return [...people].sort((a, b) => a.born - b.born);\n\n      case 'sex':\n        return [...people].sort((a, b) => a.sex.localeCompare(b.sex));\n      default:\n        return people;\n    }\n  };\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead className=\"PeopleTable-header\">\n      <tr>\n        {columnsName.map(columns => {\n          if (columns.toLowerCase() === 'name'\n            || columns.toLowerCase() === 'born'\n            || columns.toLowerCase() === 'died'\n            || columns.toLowerCase() === 'sex') {\n            return (\n              <th\n                key={columns}\n                onClick={() => {\n                  searchParams.set('sortBy', columns.toLowerCase());\n                  history.push({\n                    search: searchParams.toString(),\n                  });\n                }}\n              >\n                {columns}\n                {sortBy === columns.toLowerCase() && '*'}\n              </th>)\n\n          } else {\n            return (\n              <th\n                key={columns}\n\n              >\n                {columns}\n\n              </th>)\n          }\n        })}\n      </tr>\n      </thead>\n      <tbody>\n      {getPeople(people, sortBy).map(person => <PersonRow\n        person={person}\n      />)}\n      </tbody>\n    </table>\n\n  )\n}\n\n\n","import React, {useEffect, useState} from \"react\";\nimport getPeople from \"../helpers/api\";\nimport {PeopleTable} from './PeopleTable';\nimport {useLocation} from \"react-router-dom\";\n\n\nconst PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n\n\n  useEffect(() => {\n      getPeople().then(setPeople)\n    },\n    []);\n\n\n    const visiblePeople = people.filter( person =>\n    person.name.toLowerCase().includes(query.toLowerCase())\n      || (person.fatherName!==null\n      ?person.fatherName.toLowerCase().includes(query.toLowerCase())\n      :'')\n      || (person.motherName!==null\n      ?person.motherName.toLowerCase().includes(query.toLowerCase())\n      :'')\n\n    )\n\n\n  return <>\n    <h1>People Page</h1>\n    <div className=\"search \">\n\n    </div>\n    {people.length === 0\n      ? 'Loading....'\n      : <PeopleTable people={visiblePeople}/>\n    }\n  </>;\n\n}\n\nexport default PeoplePage;\n","import React from 'react';\n\n\nconst NotFoundPage : React.FC = () => (\n  <div className='NotFoundPage'>\n    <div className='error'>\n    404\n  </div>\n    <h1 className='notFound'>Page not found!</h1>\n  </div>\n\n);\n\nexport default NotFoundPage ;\n","import React from 'react';\nimport {NavLink, Route, useLocation, useHistory} from \"react-router-dom\";\n\n\nconst Nav: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n\n  return (\n    <nav>\n      <ul className=\"navlist\">\n        <li className=\"navlist__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"navlist__link\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navlist__item\">\n          <NavLink\n            to={{\n              pathname: '/people',\n              search: '?query=',\n            }}\n            className=\"navlist__link\">\n            People Page\n          </NavLink>\n        </li>\n\n        <li className=\"navlist__item search\">\n          <Route path='/people'>\n            <input\n              type=\"text\"\n              className='search_input'\n              value={query}\n              onChange={(event) => {\n                searchParams.set('query', event.target.value);\n                history.push({\n                  search: searchParams.toString()\n                })\n              }}\n            />\n          </Route>\n        </li>\n      </ul>\n\n    </nav>)\n};\n\nexport default Nav;\n","import React from 'react';\nimport {\n  Route, Switch, Redirect\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport PeoplePage from './components/PeoplePage'\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport Nav from \"./components/Nav\";\n\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n      <header>\n        <Nav/>\n\n      </header>\n      <main>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Redirect from='/home' to='/'/>\n          <Route\n            path=\"/people/:personSlug?\"\n            exact\n            component={PeoplePage}\n          />\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </main>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter\n    basename={'/react_people-table'}\n  >\n    <App />\n  </HashRouter>\n ,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}